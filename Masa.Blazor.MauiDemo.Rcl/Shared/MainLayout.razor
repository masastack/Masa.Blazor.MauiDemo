@using Masa.Blazor.Presets.PageStack
@inherits LayoutComponentBase
@inject IPlatformIntegration PlatformIntegration

<MApp>
    <MMain>
        <MErrorHandler>
            <AuthorizeView>
                <Authorized>
                    <PPageStack TabRules="@_tabRules"
                                AppBarAlwaysVisible="false">
                        @Body
                    </PPageStack>
                </Authorized>
                <NotAuthorized>
                    @Body
                </NotAuthorized>
            </AuthorizeView>
        </MErrorHandler>
    </MMain>

    <MBottomNavigation App
                       Routable
                       Grow
                       Shift
                       Color="primary"
                       @bind-Value="_current">
        <PPageStackTab Href="/" TabRule="Home">
            <MButton @attributes="@context.Attrs">
                <span>Shop</span>
                <MIcon>@ShopIcon</MIcon>
            </MButton>
        </PPageStackTab>
        <PPageStackTab Href="/todo" TabRule="Todo">
            <MButton @attributes="@context.Attrs">
                <span>To do</span>
                <MIcon>@TodoIcon</MIcon>
            </MButton>
        </PPageStackTab>
        <PPageStackTab Href="/user" TabRule="User">
            <MButton @attributes="@context.Attrs">
                <span>User</span>
                <MIcon>@UserIcon</MIcon>
            </MButton>
        </PPageStackTab>
    </MBottomNavigation>
</MApp>

@code {

    internal static TabRule Home => new TabRule("^/$");
    internal static TabRule Todo => new TabRule("/todo", Self: true);
    internal static TabRule User => new TabRule("/user");

    private static HashSet<TabRule> _tabRules = [Home, Todo, User];

    private StringNumber? _current;

    private string ShopIcon => _current == 0 ? "mdi-shopping" : "mdi-shopping-outline";
    private string TodoIcon => _current == 1 ? "mdi-check-bold" : "mdi-check";
    private string UserIcon => _current == 2 ? "mdi-account" : "mdi-account-outline";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await PlatformIntegration.InitThemeAsync();
        }
    }

}